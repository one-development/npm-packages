version: 2.1
executors:
  node_executor:
    environment:
      NODE_ENV: production
    docker:
      - image: circleci/node:12.14
    working_directory: ~/repo

commands:
  install_aws_cli:
    description: Install the AWS CLI via Pip if not already installed.
    steps:
      - run:
          name: Install AWS CLI
          command: |
            if which aws > /dev/null; then
              echo "The AWS CLI is already installed. Skipping."
              exit 0
            fi

            if [[ $(which unzip curl | wc -l) -eq 2 ]]; then
              cd
              curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
              unzip awscli-bundle.zip
              if which sudo > /dev/null; then
                sudo ~/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
              else
                # This installs the AWS CLI to the default location (~/.local/lib/aws) and create a symbolic link (symlink) at ~/bin/aws. Make sure that ~/bin is in your $PATH.
                awscli-bundle/install -b ~/bin/aws
              fi
              rm -rf awscli-bundle*
              cd -
            else
              echo "Unable to install AWS CLI."
              exit 1
            fi

  install_js_packages:
    description: Restore cache and install NPM packages via Yarn
    steps:
      - restore_cache:
          name: Restore Yarn package cache
          keys:
            # You can bump v1 to v2, v3, etc. to manually invalidate the cache
            - v1-yarn-packages-{{ checksum "yarn.lock" }}
            - v1-yarn-packages-
      - run:
          name: Configure NPM registry
          command: |
            NPM_EMAIL=$NPM_ART_EMAIL NPM_PASSWORD=$ARTIFACTORY_PASS NPM_USERNAME=$ARTIFACTORY_USER NPM_REGISTRY=$NPM_ART_REPO yarn authenticate
      - run:
          name: Install JavaScript packages
          command: yarn install --production=false --offline --frozen-lockfile

  setup_aws_cli:
    description: Configure and store AWS credentials in ~/.aws/credentials and ~/.aws/config
    parameters:
      profile-name:
        description: Profile name to be configured.
        type: string
        default: 'default'

      aws-access-key-id:
        description: AWS access key id for IAM role. Set this to the name of the environment variable for this value, i.e. AWS_ACCESS_KEY.
        type: env_var_name
        default: AWS_ACCESS_KEY_ID

      aws-secret-access-key:
        description: AWS secret key for IAM role. Set this to the name of the environment variable for this value, i.e. AWS_SECRET_ACCESS_KEY.
        type: env_var_name
        default: AWS_SECRET_ACCESS_KEY

      aws-region:
        description: Env var of AWS region to operate in (defaults to AWS_DEFAULT_REGION)
        type: env_var_name
        default: AWS_DEFAULT_REGION

    steps:
      - install_aws_cli

      - run:
          name: Configure AWS Access Key ID
          command: aws configure set aws_access_key_id $<<parameters.aws-access-key-id>> --profile <<parameters.profile-name>>

      - run:
          name: Configure AWS Secret Access Key
          command: aws configure set aws_secret_access_key $<<parameters.aws-secret-access-key>> --profile <<parameters.profile-name>>

      - run:
          name: Configure AWS default region
          command: aws configure set region $<<parameters.aws-region>> --profile <<parameters.profile-name>>

jobs:
  verify_checkout:
    executor: node_executor
    steps:
      - checkout
      - install_js_packages
      - run:
          name: Check for unstaged changes
          command: git diff --exit-code
      - run:
          name: Check for duplicated JavaScript packages
          command: yarn deduplicate --ci
      - save_cache:
          name: Save Yarn package cache
          key: v1-yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  lint:
    executor: node_executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run linter
          command: yarn lint

  test:
    executor: node_executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Run unit tests
          command: yarn test --ci --coverage --once
      - store_test_results:
          path: reports/test-results

  build:
    executor: node_executor
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build packages
          command: yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  deploy:
    executor: node_executor
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_aws_cli
      - add_ssh_keys
      - run:
          name: Add known hosts
          command: ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
      - run:
          name: Configure Git user for Lerna
          command: |
            set +e
            git config user.name “circle-ci-bot”
            git config user.email “jth0024@gmail.com”
      - run:
          name: Deploy packages
          command: NPM_REGISTRY=$NPM_ART_REPO yarn deploy

workflows:
  version: 2
  pipeline:
    jobs:
      - verify_checkout
      - lint:
          requires:
            - verify_checkout
      - test:
          requires:
            - verify_checkout
      - build:
          requires:
            - verify_checkout
      - deploy:
          requires:
            - lint
            - test
            - build
          filters:
            branches:
              only: master
